#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/75167474-24b5-4007-a2fd-b54ca2583411 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool puesto1;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
bool puesto1 = 0;
int LED = 13;
#include "thingProperties.h"

const int PIRPin = 32; // Pin where the PIR sensor is connected
int previousPIRState = 0; // Variable to store previous PIR state

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Initialize PIR sensor pin as an input:
  pinMode(PIRPin, INPUT);
  pinMode(LED, OUTPUT);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  int pirState = digitalRead(PIRPin); // Read the PIR sensor input
  
  if (pirState == HIGH && previousPIRState == LOW) {
    puesto1 = !puesto1; // Toggle puesto1 state
  }
  
  previousPIRState = pirState; // Update previous PIR state
  digitalWrite(LED, pirState); // Update LED based on puesto1 state
  delay(200);
}

